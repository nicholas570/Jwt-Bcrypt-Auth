[{"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/index.js":"1","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/reportWebVitals.js":"2","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/App.jsx":"3","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/Router.jsx":"4","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Register.jsx":"5","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Auth.jsx":"6","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Home.jsx":"7","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Login.jsx":"8","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/context/userProvider.jsx":"9","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/axios/axiosInstance.js":"10","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/PrivateRoute.jsx":"11","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/layout/Layout.jsx":"12"},{"size":548,"mtime":1607951404178,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607951005509,"results":"15","hashOfConfig":"14"},{"size":217,"mtime":1608754248093,"results":"16","hashOfConfig":"14"},{"size":683,"mtime":1608928209745,"results":"17","hashOfConfig":"14"},{"size":4234,"mtime":1608931712937,"results":"18","hashOfConfig":"14"},{"size":748,"mtime":1608800057626,"results":"19","hashOfConfig":"14"},{"size":1570,"mtime":1608931762889,"results":"20","hashOfConfig":"14"},{"size":3231,"mtime":1608808548438,"results":"21","hashOfConfig":"14"},{"size":441,"mtime":1608931491917,"results":"22","hashOfConfig":"14"},{"size":975,"mtime":1608766709344,"results":"23","hashOfConfig":"14"},{"size":1052,"mtime":1608928109506,"results":"24","hashOfConfig":"14"},{"size":623,"mtime":1608931439890,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bwbwpp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/index.js",[],["56","57"],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/reportWebVitals.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/App.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/Router.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Register.jsx",["58"],"import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport axiosInstance from '../../axios/axiosInstance';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap/';\nimport { ArrowLeft } from 'react-bootstrap-icons';\n\nimport { userContext } from '../../context/userProvider';\n\nimport style from '../../css/Register.module.css';\n\nfunction Register() {\n  const [validated, setValidated] = useState(false);\n  const [result, setResult] = useState({ message: '', error: '' });\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  });\n  const { setUserData } = useContext(userContext);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity()) {\n      setValidated(true);\n\n      axiosInstance(history)\n        .post('api/auth/register', { ...state })\n        .then(({ data }) => {\n          console.log(data);\n          setResult({ error: data.error, message: data.message });\n          setUserData({\n            user: data.data,\n            token: data.token,\n            refreshToken: data.refreshToken,\n          });\n          localStorage.setItem('Token', data.token);\n          localStorage.setItem('User', JSON.stringify(data.data));\n          history.push('/home');\n        })\n        .catch((err) => {\n          if (err.response === undefined) {\n            setResult({\n              message: 'Something went wrong',\n              error: '',\n            });\n          } else {\n            setResult({\n              message: err.response.data.message,\n              error: err.response.data.error,\n            });\n          }\n        });\n\n      setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n      });\n      setValidated(false);\n    }\n  };\n  return (\n    <div className={style.container}>\n      <Container>\n        <Row className='d-flex justify-content-center'>\n          <Col md={8}>\n            <Link to='/'>\n              <ArrowLeft />\n            </Link>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group>\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter first name'\n                  name='firstName'\n                  onChange={handleChange}\n                  value={state.firstName}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter last name'\n                  name='lastName'\n                  onChange={handleChange}\n                  value={state.lastName}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  name='email'\n                  onChange={handleChange}\n                  value={state.email}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  placeholder='5 caractÃ¨res mininum dont 1 chiffre'\n                  name='password'\n                  onChange={handleChange}\n                  value={state.password}\n                  required\n                />\n              </Form.Group>\n\n              <Button variant='outline-primary' type='submit'>\n                Register\n              </Button>\n            </Form>\n            {result && (\n              <>\n                <p>{result.message}</p>\n                <p>{result.error}</p>\n              </>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Register;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Auth.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Home.jsx",["59"],"import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance from '../../axios/axiosInstance';\n\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\n\nimport { userContext } from '../../context/userProvider';\n\nfunction Home() {\n  const [posts, setPosts] = useState();\n  const [result, setResult] = useState({ message: '', error: '' });\n  const { userData } = useContext(userContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    axiosInstance(history)\n      .get('api/posts')\n      .then(({ data }) => {\n        setPosts(data.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          console.log(err.response);\n          setResult({\n            message: err.response.data,\n            error: err.response.status,\n          });\n        }\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Hello {userData && userData.user.firstname}</h1>\n      <h1>My posts</h1>\n      {result && (\n        <>\n          <p>{result.message}</p>\n          <p>{result.error}</p>\n        </>\n      )}\n      {posts && posts.length > 0 ? (\n        posts.map((post) => {\n          return (\n            <Jumbotron key={post.id} className='col-md-5'>\n              <Container>\n                <Row>\n                  <Col>\n                    <p>{post.content}</p>\n                  </Col>\n                </Row>\n              </Container>\n            </Jumbotron>\n          );\n        })\n      ) : (\n        <h2>No post yet :)</h2>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Login.jsx",["60"],"import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport axiosInstance from '../../axios/axiosInstance';\n\nimport { userContext } from '../../context/userProvider';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap/';\nimport { ArrowLeft } from 'react-bootstrap-icons';\n\nimport style from '../../css/Register.module.css';\n\nfunction Login() {\n  const [state, setState] = useState({ email: '', password: '' });\n  const [validated, setValidated] = useState(false);\n  const [result, setResult] = useState({ message: '', error: '' });\n  const { setUserData } = useContext(userContext);\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity()) {\n      setValidated(true);\n\n      await axiosInstance(history)\n        .post('api/auth/login', { ...state })\n        .then(({ data }) => {\n          setResult({ error: data.error, message: data.message });\n          setUserData({\n            user: data.data,\n            token: data.token,\n            refreshToken: data.refreshToken,\n          });\n          localStorage.setItem('Token', data.token);\n          localStorage.setItem('User', JSON.stringify(data.data));\n          setTimeout(() => {\n            history.push('/home');\n          }, 1000);\n        })\n        .catch((err) => {\n          if (err.response === undefined) {\n            setResult({\n              message: 'Something went wrong',\n              error: '',\n            });\n          } else {\n            setResult({\n              message: err.response.data.message,\n              error: err.response.data.error,\n            });\n          }\n        });\n\n      setState({\n        email: '',\n        password: '',\n      });\n      setValidated(false);\n    }\n  };\n\n  return (\n    <Container fluid className={style.container}>\n      <Row className='m-3'>\n        <Col>\n          <Link to='/'>\n            <ArrowLeft />\n          </Link>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Email'\n                name='email'\n                onChange={handleChange}\n                value={state.email}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                name='password'\n                onChange={handleChange}\n                value={state.password}\n                required\n              />\n            </Form.Group>\n\n            <Button variant='outline-primary' type='submit'>\n              Login\n            </Button>\n          </Form>\n          {result && (\n            <>\n              <p>{result.message}</p>\n              <p>{result.error}</p>\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/context/userProvider.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/axios/axiosInstance.js",[],["61","62"],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/PrivateRoute.jsx",["63"],"import { useContext, useEffect, useState } from 'react';\nimport { Route, Redirect, useHistory } from 'react-router-dom';\nimport axiosInstance from '../../axios/axiosInstance';\n\nimport { userContext } from '../../context/userProvider';\n\nfunction PrivateRoute({ component: Component, layout: Layout, ...rest }) {\n  const { userData } = useContext(userContext);\n  const [isValid, setIsValid] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    axiosInstance(history)\n      .post('api/auth/authenticateToken', { token: userData.token })\n      .then(({ data }) => {\n        setIsValid(data);\n      })\n      .catch((err) => setIsValid(err.response));\n  }, []);\n\n  return (\n    <>\n      {isValid && (\n        <Route\n          {...rest}\n          render={(props) =>\n            isValid === true ? (\n              <Layout {...props}>\n                <Component {...props} />\n              </Layout>\n            ) : (\n              <Redirect to='/' />\n            )\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default PrivateRoute;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/layout/Layout.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":14,"column":10,"nodeType":"70","messageId":"71","endLine":14,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":30,"column":6,"nodeType":"74","endLine":30,"endColumn":8,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"69","line":15,"column":10,"nodeType":"70","messageId":"71","endLine":15,"endColumn":19},{"ruleId":"64","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"72","severity":1,"message":"78","line":19,"column":6,"nodeType":"74","endLine":19,"endColumn":8,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'validated' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["82"],["80"],["81"],"React Hook useEffect has missing dependencies: 'history' and 'userData.token'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [history]",{"range":"88","text":"89"},"Update the dependencies array to be: [history, userData.token]",{"range":"90","text":"91"},[867,869],"[history]",[669,671],"[history, userData.token]"]