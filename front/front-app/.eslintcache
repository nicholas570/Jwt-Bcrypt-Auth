[{"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/index.js":"1","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/reportWebVitals.js":"2","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/App.jsx":"3","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/Register.jsx":"4"},{"size":548,"mtime":1607951404178,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607951005509,"results":"7","hashOfConfig":"6"},{"size":179,"mtime":1607957038074,"results":"8","hashOfConfig":"6"},{"size":3345,"mtime":1608035604885,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bwbwpp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/index.js",[],["20","21"],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/reportWebVitals.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/App.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/Register.jsx",["22"],"import { useState } from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap/';\n\nfunction Register() {\n  const [validated, setValidated] = useState(false);\n  const [result, setResult] = useState({ message: '', error: '' });\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity()) {\n      setValidated(true);\n\n      axios\n        .post('http://localhost:5001/api/auth/register', { ...state })\n        .then(({ data }) => {\n          console.log(data);\n          setResult({ error: data.error, message: data.message });\n        })\n        .catch((err) => {\n          if (err.response === undefined) {\n            setResult({\n              message: 'Something went wrong',\n              error: '',\n            });\n          } else {\n            setResult({\n              message: err.response.data.message,\n              error: err.response.data.error,\n            });\n          }\n        });\n\n      setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n      });\n      setValidated(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Row className='d-flex justify-content-center'>\n        <Col md={8}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter first name'\n                name='firstName'\n                onChange={handleChange}\n                value={state.firstName}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter last name'\n                name='lastName'\n                onChange={handleChange}\n                value={state.lastName}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                name='email'\n                onChange={handleChange}\n                value={state.email}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='5 caractÃ¨res mininum dont 1 chiffre'\n                name='password'\n                onChange={handleChange}\n                value={state.password}\n                required\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit'>\n              Register\n            </Button>\n          </Form>\n          {result && (\n            <>\n              <p>{result.message}</p>\n              <p>{result.error}</p>\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Register;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":7,"column":10,"nodeType":"29","messageId":"30","endLine":7,"endColumn":19},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'validated' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]