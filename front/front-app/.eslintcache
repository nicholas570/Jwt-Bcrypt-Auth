[{"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/index.js":"1","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/reportWebVitals.js":"2","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/App.jsx":"3","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/Router.jsx":"4","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Register.jsx":"5","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Auth.jsx":"6","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Home.jsx":"7","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Login.jsx":"8","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/axios/axiosInstance.js":"9","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/PrivateRoute.jsx":"10","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/layout/Layout.jsx":"11","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/login.js":"12","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/context/UserProvider.jsx":"13","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/context/AuthProvider.jsx":"14","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/logout.js":"15","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/register.js":"16","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/accessPrivateRoutes.js":"17"},{"size":548,"mtime":1607951404178,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607951005509,"results":"20","hashOfConfig":"19"},{"size":317,"mtime":1609149066320,"results":"21","hashOfConfig":"19"},{"size":683,"mtime":1608928209745,"results":"22","hashOfConfig":"19"},{"size":3500,"mtime":1609160882769,"results":"23","hashOfConfig":"19"},{"size":748,"mtime":1608800057626,"results":"24","hashOfConfig":"19"},{"size":1570,"mtime":1609149120224,"results":"25","hashOfConfig":"19"},{"size":2459,"mtime":1609159187320,"results":"26","hashOfConfig":"19"},{"size":942,"mtime":1609189649627,"results":"27","hashOfConfig":"19"},{"size":920,"mtime":1609184137968,"results":"28","hashOfConfig":"19"},{"size":626,"mtime":1609149698111,"results":"29","hashOfConfig":"19"},{"size":914,"mtime":1609189680407,"results":"30","hashOfConfig":"19"},{"size":391,"mtime":1609150605572,"results":"31","hashOfConfig":"19"},{"size":1106,"mtime":1609168508812,"results":"32","hashOfConfig":"19"},{"size":154,"mtime":1609149443184,"results":"33","hashOfConfig":"19"},{"size":861,"mtime":1609189728931,"results":"34","hashOfConfig":"19"},{"size":342,"mtime":1609160703002,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bwbwpp",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/index.js",[],["75","76"],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/reportWebVitals.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/App.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/Router.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Register.jsx",["77"],"import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap/';\nimport { ArrowLeft } from 'react-bootstrap-icons';\n\nimport { userContext } from '../../context/UserProvider';\nimport { authContext } from '../../context/AuthProvider';\n\nimport style from '../../css/Register.module.css';\n\nfunction Register() {\n  const [validated, setValidated] = useState(false);\n  const [result, setResult] = useState({ message: '', error: '' });\n  const [state, setState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  });\n  const { setUserData } = useContext(userContext);\n  const { register, setToken } = useContext(authContext);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity()) {\n      setValidated(true);\n\n      await register(history, state, setToken, setResult, setUserData);\n\n      setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n      });\n      setValidated(false);\n    }\n  };\n  return (\n    <div className={style.container}>\n      <Container>\n        <Row className='d-flex justify-content-center'>\n          <Col md={8}>\n            <Link to='/'>\n              <ArrowLeft />\n            </Link>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group>\n                <Form.Label>First name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter first name'\n                  name='firstName'\n                  onChange={handleChange}\n                  value={state.firstName}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Last name</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter last name'\n                  name='lastName'\n                  onChange={handleChange}\n                  value={state.lastName}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  name='email'\n                  onChange={handleChange}\n                  value={state.email}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  placeholder='5 caractÃ¨res mininum dont 1 chiffre'\n                  name='password'\n                  onChange={handleChange}\n                  value={state.password}\n                  required\n                />\n              </Form.Group>\n\n              <Button variant='outline-primary' type='submit'>\n                Register\n              </Button>\n            </Form>\n            {result && (\n              <>\n                <p>{result.message}</p>\n                <p>{result.error}</p>\n              </>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Register;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Auth.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Home.jsx",["78"],"import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance from '../../axios/axiosInstance';\n\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\n\nimport { userContext } from '../../context/UserProvider';\n\nfunction Home() {\n  const [posts, setPosts] = useState();\n  const [result, setResult] = useState({ message: '', error: '' });\n  const { userData } = useContext(userContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    axiosInstance(history)\n      .get('api/posts')\n      .then(({ data }) => {\n        setPosts(data.data);\n      })\n      .catch((err) => {\n        if (err.response) {\n          console.log(err.response);\n          setResult({\n            message: err.response.data,\n            error: err.response.status,\n          });\n        }\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Hello {userData && userData.user.firstname}</h1>\n      <h1>My posts</h1>\n      {result && (\n        <>\n          <p>{result.message}</p>\n          <p>{result.error}</p>\n        </>\n      )}\n      {posts && posts.length > 0 ? (\n        posts.map((post) => {\n          return (\n            <Jumbotron key={post.id} className='col-md-5'>\n              <Container>\n                <Row>\n                  <Col>\n                    <p>{post.content}</p>\n                  </Col>\n                </Row>\n              </Container>\n            </Jumbotron>\n          );\n        })\n      ) : (\n        <h2>No post yet :)</h2>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/views/Login.jsx",["79"],"import React, { useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport { userContext } from '../../context/UserProvider';\nimport { authContext } from '../../context/AuthProvider';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap/';\nimport { ArrowLeft } from 'react-bootstrap-icons';\n\nimport style from '../../css/Register.module.css';\n\nfunction Login() {\n  const [state, setState] = useState({ email: '', password: '' });\n  const [validated, setValidated] = useState(false);\n  const [result, setResult] = useState({ message: '', error: '' });\n  const { setUserData } = useContext(userContext);\n  const { login, setToken } = useContext(authContext);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity()) {\n      setValidated(true);\n\n      await login(history, state, setToken, setResult, setUserData);\n\n      setState({\n        email: '',\n        password: '',\n      });\n      setValidated(false);\n    }\n  };\n\n  return (\n    <Container fluid className={style.container}>\n      <Row className='m-3'>\n        <Col>\n          <Link to='/'>\n            <ArrowLeft />\n          </Link>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Email'\n                name='email'\n                onChange={handleChange}\n                value={state.email}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                name='password'\n                onChange={handleChange}\n                value={state.password}\n                required\n              />\n            </Form.Group>\n\n            <Button variant='outline-primary' type='submit'>\n              Login\n            </Button>\n          </Form>\n          {result && (\n            <>\n              <p>{result.message}</p>\n              <p>{result.error}</p>\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/axios/axiosInstance.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/router/PrivateRoute.jsx",["80"],"import { useContext, useEffect, useState } from 'react';\nimport { Route, Redirect, useHistory } from 'react-router-dom';\n\nimport { authContext } from '../../context/AuthProvider';\n\nfunction PrivateRoute({ component: Component, layout: Layout, ...rest }) {\n  const { accessPrivateRoutes, token, setToken } = useContext(authContext);\n  const [isValid, setIsValid] = useState();\n  const history = useHistory();\n\n  useEffect(() => {\n    accessPrivateRoutes(history, token, setIsValid);\n    setToken(localStorage.getItem('Token'));\n  }, [token]);\n\n  return (\n    <>\n      {isValid && (\n        <Route\n          {...rest}\n          render={(props) =>\n            isValid === true ? (\n              <Layout {...props}>\n                <Component {...props} />\n              </Layout>\n            ) : (\n              <Redirect to='/' />\n            )\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default PrivateRoute;\n","/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/components/layout/Layout.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/login.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/context/UserProvider.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/context/AuthProvider.jsx",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/logout.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/register.js",[],"/home/wilder/Desktop/Node.js/auth/Jwt-Bcrypt-Auth/front/front-app/src/services/accessPrivateRoutes.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":13,"column":10,"nodeType":"87","messageId":"88","endLine":13,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":30,"column":6,"nodeType":"91","endLine":30,"endColumn":8,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"86","line":14,"column":10,"nodeType":"87","messageId":"88","endLine":14,"endColumn":19},{"ruleId":"89","severity":1,"message":"93","line":14,"column":6,"nodeType":"91","endLine":14,"endColumn":13,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'validated' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has missing dependencies: 'accessPrivateRoutes', 'history', and 'setToken'. Either include them or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [history]",{"range":"103","text":"104"},"Update the dependencies array to be: [accessPrivateRoutes, history, setToken, token]",{"range":"105","text":"106"},[867,869],"[history]",[532,539],"[accessPrivateRoutes, history, setToken, token]"]